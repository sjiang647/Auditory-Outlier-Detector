%% Experiment 5: Auditory Outlier Detection

clear all;
close all;
clc;

outlierRange = 0;
toneLength = 0;
tonePause = 0;

window_w = rect(3);
toneLength = 0.2;
tonePause = 0.1;
toneFrequency = 0;
trialPause = 0.5;
toneRange = [2 4 6];
meanPos = 1;
tones = [];
data = {};
subjectData = {};

%% Input subject name & save

inputWindow = inputdlg({'Name','Gender','Age'},...
              'Customer', [1 50; 1 12; 1 7]);
          
% int = input('Participant Initial: ','s');
% nameID = upper(int);
% 
% if ~isdir([current, '/Participant_Data/', nameID])
%     mkdir([current, '/Participant_Data/', nameID]);
% end

%% Tuning sound (Convert Hz to MIDI semitones)
myTone = sin(2*pi* frequency * toneLength);
%% Task instructions 
%     Screen('DrawText', window, 'You will listen to 7 audio tones. 1 tone is an outlier. If the outlier is a higher tone, press the ?H? key. If the outlier is a lower tone, press the ?L? key.', x1, y1-25);
%     Screen('Flip',window);  
%% Counterbalancing 

%% Actual experiment 

%% Asking whether high or low

%% Saving response

%% Repeat #6-#8 nIter times 

%% Save result

